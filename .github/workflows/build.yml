name: Docker Build

on:
  push:
    branches: [main, develop]
    paths:
      - 'services/**'
      - '.github/workflows/build.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'services/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-webhook-receiver:
    name: Build webhook-receiver
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-webhook-receiver
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=long

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./services/webhook-receiver
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-pipeline-worker:
    name: Build pipeline-worker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-pipeline-worker
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=long

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./services/pipeline-worker
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [build-webhook-receiver, build-pipeline-worker]
    if: always()
    steps:
      - name: Check build status
        run: |
          echo "Webhook Receiver: ${{ needs.build-webhook-receiver.result }}"
          echo "Pipeline Worker: ${{ needs.build-pipeline-worker.result }}"

          if [ "${{ needs.build-webhook-receiver.result }}" != "success" ] || [ "${{ needs.build-pipeline-worker.result }}" != "success" ]; then
            echo "::error::One or more Docker builds failed"
            exit 1
          else
            echo "âœ… All Docker images built successfully"
          fi
